--- # service-api-jobs 
apiVersion: v1
kind: Service
metadata:
  name: service-api-jobs      
spec:
  selector:
    app: api
    container: api-jobs
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: NodePort
--- #service-api-identity
apiVersion: v1
kind: Service
metadata:
  name: service-api-identity
spec:
  selector:
    app: api
    container: api-identity
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: NodePort
--- # service-applicants-api
apiVersion: v1
kind: Service
metadata:
  name: service-applicants-api
spec:
  selector:
    app: api
    container: applicants-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: NodePort
--- # api-jobs-dep  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-jobs-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      container: api-jobs
  template:
    metadata:
      labels:
        app: api
        container: api-jobs
    spec:
      containers:
        - name: api-jobs
          image: alaahajri/service-api-jobs:latest
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"  
          env:
            - name: ConnectionString
              value: "Server=mssql-service.default;User=sa;Password=Pass@word;Database=dotnetgigs.jobs;"
            - name: RABBITMQ_HOST
              value: rabbitmq-service.default
            - name: RABBITMQ_USERNAME
              value: guest
            - name: RABBITMQ_PASSWORD
              value: guest     
          # livenessProbe: 
          #   httpGet:
          #     path: /
          #     port: 80
          #   periodSeconds: 10 
          #   initialDelaySeconds: 5                    
--- #api-identity-dep          
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-identity-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      container: api-identity
  template:
    metadata:
      labels:
        app: api
        container: api-identity
    spec:
      containers:
        - name: api-identity
          image: alaahajri/service-api-identity:latest
          env:
            - name: RedisHost
              value: "service-redis.default:6379"
            - name: RABBITMQ_HOST
              value: rabbitmq-service.default
            - name: RABBITMQ_USERNAME
              value: guest
            - name: RABBITMQ_PASSWORD
              value: guest
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"              
          # livenessProbe: 
          #   httpGet:
          #     path: /
          #     port: 80
          #   periodSeconds: 10 
          #   initialDelaySeconds: 5                         
--- # api-applicants-dep
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-applicants-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      container: api-applicants
  template:
    metadata:
      labels:
        app: api
        container: api-applicants
    spec:
      containers:
        - name: api-applicants
          image: alaahajri/service-api-applicants:latest
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"  
          env:
            - name: ConnectionString
              value: "Server=mssql-service.default;User=sa;Password=Pass@word;Database=dotnetgigs.applicants;"
            - name: RABBITMQ_HOST
              value: rabbitmq-service.default
            - name: RABBITMQ_USERNAME
              value: guest
            - name: RABBITMQ_PASSWORD
              value: guest
          # livenessProbe: 
          #   httpGet:
          #     path: /
          #     port: 80
          #   periodSeconds: 10 
          #   initialDelaySeconds: 5           